<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.allen.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="org.allen.entity.Student">
        <id column="STUID" jdbcType="DECIMAL" property="stuid"/>
        <result column="STUNAME" jdbcType="VARCHAR" property="stuname"/>
        <result column="STUAGE" jdbcType="DECIMAL" property="stuage"/>
        <result column="GRANAME" jdbcType="VARCHAR" property="graname"/>
        <result column="HOMEADDRESS" jdbcType="VARCHAR" property="homeaddress"/>
        <result column="SCHOOLADDRESS" jdbcType="VARCHAR" property="schooladdress"/>
        <result column="CLASSID" jdbcType="DECIMAL" property="classid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        STUID, STUNAME, STUAGE, GRANAME, HOMEADDRESS, SCHOOLADDRESS, CLASSID
    </sql>
    <select id="selectByExample" parameterType="org.allen.entity.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from STUDENT
        where STUID = #{stuid,jdbcType=DECIMAL}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
        delete
        from STUDENT
        where STUID = #{stuid,jdbcType=DECIMAL}
    </delete>
    <delete id="deleteByExample" parameterType="org.allen.entity.StudentExample">
        delete from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.allen.entity.Student">
        insert into STUDENT (STUID, STUNAME, STUAGE,
                             GRANAME, HOMEADDRESS, SCHOOLADDRESS,
                             CLASSID)
        values (#{stuid,jdbcType=DECIMAL}, #{stuname,jdbcType=VARCHAR}, #{stuage,jdbcType=DECIMAL},
                #{graname,jdbcType=VARCHAR}, #{homeaddress,jdbcType=VARCHAR}, #{schooladdress,jdbcType=VARCHAR},
                #{classid,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="org.allen.entity.Student">
        insert into STUDENT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuid != null">
                STUID,
            </if>
            <if test="stuname != null">
                STUNAME,
            </if>
            <if test="stuage != null">
                STUAGE,
            </if>
            <if test="graname != null">
                GRANAME,
            </if>
            <if test="homeaddress != null">
                HOMEADDRESS,
            </if>
            <if test="schooladdress != null">
                SCHOOLADDRESS,
            </if>
            <if test="classid != null">
                CLASSID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuid != null">
                #{stuid,jdbcType=DECIMAL},
            </if>
            <if test="stuname != null">
                #{stuname,jdbcType=VARCHAR},
            </if>
            <if test="stuage != null">
                #{stuage,jdbcType=DECIMAL},
            </if>
            <if test="graname != null">
                #{graname,jdbcType=VARCHAR},
            </if>
            <if test="homeaddress != null">
                #{homeaddress,jdbcType=VARCHAR},
            </if>
            <if test="schooladdress != null">
                #{schooladdress,jdbcType=VARCHAR},
            </if>
            <if test="classid != null">
                #{classid,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.allen.entity.StudentExample" resultType="java.lang.Long">
        select count(*) from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update STUDENT
        <set>
            <if test="record.stuid != null">
                STUID = #{record.stuid,jdbcType=DECIMAL},
            </if>
            <if test="record.stuname != null">
                STUNAME = #{record.stuname,jdbcType=VARCHAR},
            </if>
            <if test="record.stuage != null">
                STUAGE = #{record.stuage,jdbcType=DECIMAL},
            </if>
            <if test="record.graname != null">
                GRANAME = #{record.graname,jdbcType=VARCHAR},
            </if>
            <if test="record.homeaddress != null">
                HOMEADDRESS = #{record.homeaddress,jdbcType=VARCHAR},
            </if>
            <if test="record.schooladdress != null">
                SCHOOLADDRESS = #{record.schooladdress,jdbcType=VARCHAR},
            </if>
            <if test="record.classid != null">
                CLASSID = #{record.classid,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update STUDENT
        set STUID = #{record.stuid,jdbcType=DECIMAL},
        STUNAME = #{record.stuname,jdbcType=VARCHAR},
        STUAGE = #{record.stuage,jdbcType=DECIMAL},
        GRANAME = #{record.graname,jdbcType=VARCHAR},
        HOMEADDRESS = #{record.homeaddress,jdbcType=VARCHAR},
        SCHOOLADDRESS = #{record.schooladdress,jdbcType=VARCHAR},
        CLASSID = #{record.classid,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.allen.entity.Student">
        update STUDENT
        <set>
            <if test="stuname != null">
                STUNAME = #{stuname,jdbcType=VARCHAR},
            </if>
            <if test="stuage != null">
                STUAGE = #{stuage,jdbcType=DECIMAL},
            </if>
            <if test="graname != null">
                GRANAME = #{graname,jdbcType=VARCHAR},
            </if>
            <if test="homeaddress != null">
                HOMEADDRESS = #{homeaddress,jdbcType=VARCHAR},
            </if>
            <if test="schooladdress != null">
                SCHOOLADDRESS = #{schooladdress,jdbcType=VARCHAR},
            </if>
            <if test="classid != null">
                CLASSID = #{classid,jdbcType=DECIMAL},
            </if>
        </set>
        where STUID = #{stuid,jdbcType=DECIMAL}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.allen.entity.Student">
        update STUDENT
        set STUNAME       = #{stuname,jdbcType=VARCHAR},
            STUAGE        = #{stuage,jdbcType=DECIMAL},
            GRANAME       = #{graname,jdbcType=VARCHAR},
            HOMEADDRESS   = #{homeaddress,jdbcType=VARCHAR},
            SCHOOLADDRESS = #{schooladdress,jdbcType=VARCHAR},
            CLASSID       = #{classid,jdbcType=DECIMAL}
        where STUID = #{stuid,jdbcType=DECIMAL}
    </update>
    <resultMap id="BaseResultMap" type="org.allen.entity.Student">
        <id column="NUM" jdbcType="VARCHAR" property="num"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        NUM, NAME
    </sql>
    <select id="selectByExample" parameterType="org.allen.entity.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from STUDENT
        where NUM = #{num,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from STUDENT
        where NUM = #{num,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="org.allen.entity.StudentExample">
        delete from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.allen.entity.Student">
        insert into STUDENT (NUM, NAME)
        values (#{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.allen.entity.Student">
        insert into STUDENT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="num != null">
                NUM,
            </if>
            <if test="name != null">
                NAME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="num != null">
                #{num,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.allen.entity.StudentExample" resultType="java.lang.Long">
        select count(*) from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update STUDENT
        <set>
            <if test="record.num != null">
                NUM = #{record.num,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update STUDENT
        set NUM = #{record.num,jdbcType=VARCHAR},
        NAME = #{record.name,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.allen.entity.Student">
        update STUDENT
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where NUM = #{num,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.allen.entity.Student">
        update STUDENT
        set NAME = #{name,jdbcType=VARCHAR}
        where NUM = #{num,jdbcType=VARCHAR}
    </update>
</mapper>